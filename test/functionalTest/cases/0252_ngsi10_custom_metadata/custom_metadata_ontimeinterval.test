# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

--NAME--
Custom metadata ONTIMEINTERVAL subscription

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--
echo "=== 1. Create ONTIMEINTERVAL subscription"
url="/v1/subscribeContext"
payload='{
    "entities": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1"
        }
    ],
    "attributes": [
        "temperature"
    ],
    "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
    "duration": "P1M",
    "notifyConditions": [
        {
            "type": "ONTIMEINTERVAL",
            "condValues": [
                "PT1S"
            ]
        }
    ]
}'
orionCurl --url "$url" --payload "${payload}" --json

sleep 0.5

echo "=== 2. Create an entity with metadata"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "43",
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "red"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "angry"
                    }
                ]
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "${payload}" --json

# Wait the notification period so a notification is sent
sleep 1

echo "=== 3. Change the value"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "28",
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "red"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "angry"
                    }
                ]
            }
            ]
        }
    ],
    "updateAction": "UPDATE"
}'
orionCurl --url "$url" --payload "${payload}" --json

# Wait the notification period so a notification is sent
sleep 1

echo "=== 4. Change the metadata"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "28",
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "red"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "happy"
                    }
                ]
            }
            ]
        }
    ],
    "updateAction": "UPDATE"
}'
orionCurl --url "$url" --payload "${payload}" --json

# Wait the notification period so a notification is sent
sleep 1

echo "=== 5. Change both value and metadata"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "12",
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "white"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "happy"
                    }
                ]
            }
            ]
        }
    ],
    "updateAction": "UPDATE"
}'
orionCurl --url "$url" --payload "${payload}" --json

# Wait the notification period so a notification is sent
sleep 1

echo "=== Get accumulated data (4 messages)"
accumulatorDump

--REGEXPECT--
=== 1. Create ONTIMEINTERVAL subscription
HTTP/1.1 200 OK
Content-Length: 108
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}
=== 2. Create an entity with metadata
HTTP/1.1 200 OK
Content-Length: 716
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "red"
                            },
                            {
                                "name": "feeling",
                                "type": "string",
                                "value": "angry"
                            }
                        ],
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 3. Change the value
HTTP/1.1 200 OK
Content-Length: 716
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "red"
                            },
                            {
                                "name": "feeling",
                                "type": "string",
                                "value": "angry"
                            }
                        ],
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 4. Change the metadata
HTTP/1.1 200 OK
Content-Length: 716
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "red"
                            },
                            {
                                "name": "feeling",
                                "type": "string",
                                "value": "happy"
                            }
                        ],
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 5. Change both value and metadata
HTTP/1.1 200 OK
Content-Length: 718
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "white"
                            },
                            {
                                "name": "feeling",
                                "type": "string",
                                "value": "happy"
                            }
                        ],
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== Get accumulated data (4 messages)
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 797
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "Room",
        "isPattern" : "false",
        "id" : "Room1",
        "attributes" : [
          {
            "name" : "temperature",
            "type" : "centigrade",
            "value" : "43",
            "metadatas" : [
              {
                "name" : "colour",
                "type" : "string",
                "value" : "red"
              },
              {
                "name" : "feeling",
                "type" : "string",
                "value" : "angry"
              }
            ]
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 797
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "Room",
        "isPattern" : "false",
        "id" : "Room1",
        "attributes" : [
          {
            "name" : "temperature",
            "type" : "centigrade",
            "value" : "28",
            "metadatas" : [
              {
                "name" : "colour",
                "type" : "string",
                "value" : "red"
              },
              {
                "name" : "feeling",
                "type" : "string",
                "value" : "angry"
              }
            ]
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 797
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "Room",
        "isPattern" : "false",
        "id" : "Room1",
        "attributes" : [
          {
            "name" : "temperature",
            "type" : "centigrade",
            "value" : "28",
            "metadatas" : [
              {
                "name" : "colour",
                "type" : "string",
                "value" : "red"
              },
              {
                "name" : "feeling",
                "type" : "string",
                "value" : "happy"
              }
            ]
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 799
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "Room",
        "isPattern" : "false",
        "id" : "Room1",
        "attributes" : [
          {
            "name" : "temperature",
            "type" : "centigrade",
            "value" : "12",
            "metadatas" : [
              {
                "name" : "colour",
                "type" : "string",
                "value" : "white"
              },
              {
                "name" : "feeling",
                "type" : "string",
                "value" : "happy"
              }
            ]
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
