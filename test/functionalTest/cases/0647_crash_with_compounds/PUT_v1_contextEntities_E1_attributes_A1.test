# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Attribute Compound Value parsing for PUT /v1/contextEntities/E/attributes/A (updateContextAttributeRequest)

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# Just one request needed here to make dure the broker doesn't crash when receiving
# a compound attribute value for "PUT /v1/contextEntities/E/attributes/A":
#
# 01. PUT /v1/contextEntities/E/attributes/A with compound attribute value using JSON
# 02. PUT /v1/contextEntities/E/attributes/A with compound attribute value using XML
#
# To assure the compounds work, we have to create the entity A with attribute E:
# 03. POST /v1/updateContext to create Entity E, attribute A
# 04. POST /v1/queryContext to make sure 03 worked
#
# Now we do the PUTs again:
#
# 05. PUT /v1/contextEntities/E/attributes/A with compound attribute value using JSON
# 06. POST /v1/queryContext to make sure 05 worked
# 07. PUT /v1/contextEntities/E/attributes/A with compound attribute value using XML
# 08. POST /v1/queryContext to make sure 07 worked
#


echo "01. PUT /v1/contextEntities/E/attributes/A with compound attribute value using JSON"
echo "==================================================================================="
payload1='{
  "type": "Room",
  "value": { "a": 1 },
  "metadatas": [
    {
      "name": "ID",
      "type": "none",
      "value": "253"
    }
  ]
}'
orionCurl --url /v1/contextEntities/E/attributes/A -X PUT --payload "$payload1" --json
echo
echo


echo "02. PUT /v1/contextEntities/E/attributes/A with compound attribute value using XML"
echo "=================================================================================="
payload2='<?xml version="1.0" encoding="UTF-8"?>
<updateContextAttributeRequest>
  <type>Room</type>
  <contextValue>
    <a>1</a>
  </contextValue>
  <metadata>
    <contextMetadata>
      <name>ID</name>
      <type>none</type>
      <value>253</value>
    </contextMetadata>
  </metadata>
</updateContextAttributeRequest>'
orionCurl --url /v1/contextEntities/E/attributes/A -X PUT --payload "$payload2"
echo
echo


echo "03. POST /v1/updateContext to create Entity E, attribute A"
echo "=========================================================="
payload3='<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="T" isPattern="false">
        <id>E</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>A</name>
          <type>AT1</type>
          <contextValue>3</contextValue>
          <metadata>
            <contextMetadata>
              <name>ID</name>
              <type>none</type>
              <value>253</value>
            </contextMetadata>
          </metadata>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url /v1/updateContext --payload "$payload3"
echo
echo


echo "04. POST /v1/queryContext to make sure 03 worked"
echo "================================================"
payload4='<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E</id>
    </entityId>
  </entityIdList>
</queryContextRequest>'
orionCurl --url /v1/queryContext --payload "$payload4"
echo
echo


echo "05. PUT /v1/contextEntities/E/attributes/A with compound attribute value using JSON"
echo "==================================================================================="
payload5='{
  "type": "Room",
  "value": { "a": 5 },
  "metadatas": [
    {
      "name": "ID",
      "type": "none",
      "value": 253
    }
  ]
}'
orionCurl --url /v1/contextEntities/E/attributes/A -X PUT --payload "$payload5" --json
echo
echo


echo "06. POST /v1/queryContext to make sure 05 worked"
echo "================================================"
payload6='<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E</id>
    </entityId>
  </entityIdList>
</queryContextRequest>'
orionCurl --url /v1/queryContext --payload "$payload6"
echo
echo


echo "07. PUT /v1/contextEntities/E/attributes/A with compound attribute value using XML"
echo "=================================================================================="
payload7='<?xml version="1.0" encoding="UTF-8"?>
<updateContextAttributeRequest>
  <type>Room</type>
  <contextValue>
    <a>7</a>
  </contextValue>
  <metadata>
    <contextMetadata>
      <name>ID</name>
      <type>none</type>
      <value>253</value>
    </contextMetadata>
  </metadata>
</updateContextAttributeRequest>'
orionCurl --url /v1/contextEntities/E/attributes/A -X PUT --payload "$payload7"
echo
echo


echo "08. POST /v1/queryContext to make sure 07 worked"
echo "================================================"
payload8='<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E</id>
    </entityId>
  </entityIdList>
</queryContextRequest>'
orionCurl --url /v1/queryContext --payload "$payload8"
echo
echo


--REGEXPECT--
01. PUT /v1/contextEntities/E/attributes/A with compound attribute value using JSON
===================================================================================
HTTP/1.1 200 OK
Content-Length: 87
Content-Type: application/json
Date: REGEX(.*)

{
    "code": "404", 
    "details": "E", 
    "reasonPhrase": "No context element found"
}


02. PUT /v1/contextEntities/E/attributes/A with compound attribute value using XML
==================================================================================
HTTP/1.1 200 OK
Content-Length: 125
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<statusCode>
  <code>404</code>
  <reasonPhrase>No context element found</reasonPhrase>
  <details>E</details>
</statusCode>


03. POST /v1/updateContext to create Entity E, attribute A
==========================================================
HTTP/1.1 200 OK
Content-Length: 830
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>E</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A</name>
            <type>AT1</type>
            <contextValue/>
            <metadata>
              <contextMetadata>
                <name>ID</name>
                <type>string</type>
                <value>253</value>
              </contextMetadata>
            </metadata>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>


04. POST /v1/queryContext to make sure 03 worked
================================================
HTTP/1.1 200 OK
Content-Length: 829
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>E</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A</name>
            <type>AT1</type>
            <contextValue>3</contextValue>
            <metadata>
              <contextMetadata>
                <name>ID</name>
                <type>string</type>
                <value>253</value>
              </contextMetadata>
            </metadata>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>


05. PUT /v1/contextEntities/E/attributes/A with compound attribute value using JSON
===================================================================================
HTTP/1.1 200 OK
Content-Length: 46
Content-Type: application/json
Date: REGEX(.*)

{
    "code": "200", 
    "reasonPhrase": "OK"
}


06. POST /v1/queryContext to make sure 05 worked
================================================
HTTP/1.1 200 OK
Content-Length: 865
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>E</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A</name>
            <type>Room</type>
            <contextValue>
              <a>5</a>
            </contextValue>
            <metadata>
              <contextMetadata>
                <name>ID</name>
                <type>string</type>
                <value>253</value>
              </contextMetadata>
            </metadata>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>


07. PUT /v1/contextEntities/E/attributes/A with compound attribute value using XML
==================================================================================
HTTP/1.1 200 OK
Content-Length: 80
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<statusCode>
  <code>200</code>
  <reasonPhrase>OK</reasonPhrase>
</statusCode>


08. POST /v1/queryContext to make sure 07 worked
================================================
HTTP/1.1 200 OK
Content-Length: 865
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>E</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A</name>
            <type>Room</type>
            <contextValue>
              <a>7</a>
            </contextValue>
            <metadata>
              <contextMetadata>
                <name>ID</name>
                <type>string</type>
                <value>253</value>
              </contextMetadata>
            </metadata>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>


--TEARDOWN--
brokerStop CB
dbDrop CB
